{
  "info": {
    "name": "Basic API Example",
    "description": "Simple CRUD API for managing users - SpecJet Basic Example",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "basic-api-collection",
    "version": {
      "major": 1,
      "minor": 0,
      "patch": 0
    }
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3001",
      "description": "Basic API mock server URL"
    }
  ],
  "item": [
    {
      "name": "Users",
      "description": "User management endpoints - Complete CRUD operations",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number for pagination"
                },
                {
                  "key": "limit", 
                  "value": "20",
                  "description": "Number of items per page"
                }
              ]
            },
            "description": "Retrieve a paginated list of all users with optional pagination parameters"
          },
          "response": []
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            },
            "description": "Create a new user with name, email, and optional isActive status"
          },
          "response": []
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/1",
              "host": ["{{base_url}}"],
              "path": ["users", "1"]
            },
            "description": "Retrieve details of a specific user by their ID"
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Smith\",\n  \"email\": \"john.smith@example.com\",\n  \"isActive\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/1",
              "host": ["{{base_url}}"],
              "path": ["users", "1"]
            },
            "description": "Update an existing user's information including name, email, and active status"
          },
          "response": []
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/1",
              "host": ["{{base_url}}"],
              "path": ["users", "1"]
            },
            "description": "Delete a user by their ID - returns 204 No Content on success"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Sample Requests",
      "description": "Pre-configured sample requests with realistic data",
      "item": [
        {
          "name": "Create Sample User - Alice",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Alice Johnson\",\n  \"email\": \"alice.johnson@company.com\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            },
            "description": "Create a sample user Alice with realistic company email"
          },
          "response": []
        },
        {
          "name": "Create Sample User - Bob",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Bob Smith\",\n  \"email\": \"bob.smith@company.com\",\n  \"isActive\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            },
            "description": "Create a sample inactive user Bob"
          },
          "response": []
        },
        {
          "name": "Get Users - First Page",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get first 10 users for testing pagination"
          },
          "response": []
        },
        {
          "name": "Update User Status - Deactivate",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Alice Johnson\",\n  \"email\": \"alice.johnson@company.com\",\n  \"isActive\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/1",
              "host": ["{{base_url}}"],
              "path": ["users", "1"]
            },
            "description": "Sample request to deactivate a user account"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Error Scenarios",
      "description": "Test error handling and edge cases",
      "item": [
        {
          "name": "Get Non-existent User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/99999",
              "host": ["{{base_url}}"],
              "path": ["users", "99999"]
            },
            "description": "Test 404 error when requesting a user that doesn't exist"
          },
          "response": []
        },
        {
          "name": "Create User - Invalid Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Invalid User\",\n  \"email\": \"not-an-email\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            },
            "description": "Test 400 error when creating user with invalid email format"
          },
          "response": []
        },
        {
          "name": "Create User - Missing Required Fields",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            },
            "description": "Test 400 error when missing required name and email fields"
          },
          "response": []
        },
        {
          "name": "Update Non-existent User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Name\",\n  \"email\": \"updated@example.com\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/99999",
              "host": ["{{base_url}}"],
              "path": ["users", "99999"]
            },
            "description": "Test 404 error when updating a user that doesn't exist"
          },
          "response": []
        },
        {
          "name": "Delete Non-existent User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/99999",
              "host": ["{{base_url}}"],
              "path": ["users", "99999"]
            },
            "description": "Test 404 error when deleting a user that doesn't exist"
          },
          "response": []
        }
      ]
    }
  ]
}